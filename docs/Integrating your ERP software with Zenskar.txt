Integrating your ERP software with Zenskar






































































































Jump to ContentDocumentationDocumentationAPI ReferenceDocumentationDocumentationMoon (Dark Mode)Sun (Light Mode)DocumentationAPI ReferenceIntegrating your ERP software with ZenskarSearchAllPagesStart typing to search‚Ä¶IntroductionIntroduction to ZenskarUnderstanding Zenskarintegration and migration guidesWhat does Zenskar pilot program entail?What does Zenskar implementation entail?Data migration and integration optionsIntegrating your ERP software with ZenskarPRODUCT GUIDESConsolidating invoicesZenskar ModulesAnalyticsCustomersMeteringData ingestionData sources: sync data to ZenskarData sources: query remote data sourcesUsage events: data-ingestion APIsManual: upload Zenskar-compatible CSV fileManual: use Zenskar's web form to upload dataBillable metricsSQL-query templatesContractsProduct, sub-product, add-on, and product catalogFree unitsCreditsDiscountAvaTaxPayment termsMinimum commitmentCustom currencyPlansContract renewalInvoicesLife cycle of an invoiceGenerate invoicesCredit notesPaymentsPayment MethodsDefault Payment MethodPayment GatewaysAccountingHierarchy of default accountsCreditsRevenue recognitionRevenue distribution and redistribution methodsPerformance obligation policiesReceivablesMonitoringEntitlementsCommunicationsEmail templatesEmail alertsUsage alertsDocument templatesSegmentsSendersRole-based access controlUsersRolesWebhook alertsCustomer-facing portalBusiness entitiesPRICING MODELSFlat-fee pricingMatrix pricingPackage pricingPer-unit pricingPercent pricingStep pricingTiered pricingTiered pricing with flat feeTwo-dimensional tiered pricingVolume pricingVolume pricing with flat feeBUSINESS MODELSPrepaid commitment with postpaid overagesPrepaid subscription with postpaid overagesCRM:CPQ INTEGRATIONSDealHubHubSpotMicrosoft Dynamics 365PipedriveSalesforceInstallation and setup of Zenskar‚Äôs package for SalesforceUse default FlowCreate your own FlowERP INTEGRATIONSNetSuiteQuickBooksSageSAPXeroZoho BooksPAYMENT-GATEWAY INTEGRATIONSAdyenRazorpayStripeTAX-AUTOMATION INTEGRATIONSAnrokAvalara AvaTaxStripe TaxZENSKAR DATA-SOURCE CONNECTORSAuth0AWS AthenaBigQueryClickHouseCockroachDBDatabricks LakehouseGoogle SheetsLookerMetabaseMongoDBMySQLPostgreSQLQuickBooksRedshiftShopifySnowflakeSet up Snowflake for integration with ZenskarConfigure Zenskar's Snowflake connectorCoinAPIZenskar IPsSECURITYTwo-factor authenticationSingle sign-on authenticationSAML authenticationHOW-TO GUIDESHow to edit an invoiceHow to edit historical dataHow to manage API keysPowered by¬†Integrating your ERP software with ZenskarDouble-entry accounting in Zenskar.Your accounting team may use enterprise resource planning (ERP) software, such as NetSuite and QuickBooks, for bookkeeping. Zenskar provides you the following two options for syncing data with your ERP/accounting software:

You may use Zenskar's accounting system to generate double-entry journal entries. These journal entries can be synced with the ERP software using Zenskar's ERP connectors.
You may use the accounting system of the ERP software to generate journal entries. Zenksar can send data related to invoices and payments (optional) to the ERP software as input.

üìöDefinitionDouble-entry accounting is a bookkeeping system in which each transaction affects at least two accounts and maintains a balance between debits and credits. This approach reduces the likelihood of accounting errors. Companies of all sizes use double-entry accounting to run their businesses.Double-entry accounting is required for all public companies, especially for businesses that rely on outside financing.

üìñ Zenskar‚ÄìERP integration
Zenskar can connect with the following ERP software:
ConnectorNetSuiteQuickBooksXeroZoho Books

‚öôÔ∏è Option 1: use Zenskar's accounting system to generate double-entry journal entries
Fig. 1: Using Zenskar's accounting system to generate journal entries.
The workflow for generating a double-entry journal entry is as follows:

Data related to business events, such as contract started, invoice finalized, and payment made, are needed as input by the accounting system. Any business-event data that affects the accounting system is passed into the accounting rules engine.
The rules engine converts these event data into double-entry journal entries that have a balanced set of debits and credits.
The ERP connector sends the journal entries to the ERP software.


‚öôÔ∏è Option 2: use the accounting system of the ERP software
Fig. 2: Using the accounting system of the ERP software to generate journal entries. The schematic of the ERP architecture is for reference only. The actual architecture of the ERP software and the way it handles journal entries may vary. Refer the documentation of the ERP software for detailed information.
The workflow for generating a double-entry journal entry is as follows:

Invoice and payment data are needed as input by the ERP software. Zenksar uses the ERP connector to send invoice objects to the the ERP software.

üìöNoteZenksar may optionally send payment objects to the ERP software. You may choose to bypass Zenskar and send payment objects directly to the ERP software.

Invoice and payment objects sent by Zenskar is consumed by the accounting rules engine of the ERP software.
The rules engine of the ERP software converts the invoice and payments objects into journal entries.

üìöNoteThe ERP software needs only the invoice and payment data to generate journal entries. Contract data is not necessary for this purpose and is not sent to the ERP software.Updated 17 days ago Data migration and integration optionsConsolidating invoicesTable of Contents
üìñ Zenskar‚ÄìERP integration
‚öôÔ∏è Option 1: use Zenskar's accounting system to generate double-entry journal entries
‚öôÔ∏è Option 2: use the accounting system of the ERP software




































































